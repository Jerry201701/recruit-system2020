<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nsd.recruitment.dao.UserInfoDao">
    <resultMap id="BaseResultMap" type="com.nsd.recruitment.domain.UserInfo">
        <result column="id" property="id" />
        <result column="openid" property="openid" />
        <result column="phone" property="loginPhone" />
        <result column="session_key" property="sessionKey" />
        <result column="login_type" property="loginType" />
    </resultMap>


    <resultMap id="ApplicantBasicResultMap" type="com.nsd.recruitment.vo.ApplicantRespVo">
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="applicant_id" jdbcType="BIGINT" property="applicantId" />
    </resultMap>
 <resultMap id="CompanyBasicResultMap" type="com.nsd.recruitment.vo.CompanyBasicRespVo">
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="manager_id" jdbcType="BIGINT" property="managerId" />
        <result column="company_id" jdbcType="BIGINT" property="companyId" />
        <result column="flag" jdbcType="TINYINT" property="status" />
    </resultMap>



    <sql id="Base_Column_List">
		id, openid,phone,login_type
	</sql>

    <select id="getOneById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from user_info
        where id = #{id}
    </select>

    <select id="findUserByPage" resultMap="BaseResultMap" parameterType="java.lang.String">
        select <include refid="Base_Column_List"/> from user_info
        where
    </select>



    <insert id="saveUserInfo" parameterType="com.nsd.recruitment.domain.UserInfo" useGeneratedKeys="true" keyProperty="id">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="openid != null">
                openid,
            </if>
            <if test="loginPhone != null">
                phone,
            </if>
            <if test="loginType != null">
                login_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
             <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="openid != null and openid !=''">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="loginPhone != null and loginPhone !=''">
                #{loginPhone,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                #{loginType,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateUserInfo" parameterType="com.nsd.recruitment.domain.UserInfo">
        update user_info
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="loginType != null">
                login_type = #{loginType,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="getUserByPhone" resultType="com.nsd.recruitment.domain.UserInfo" parameterType="java.lang.String">
        select <include refid="Base_Column_List"/> from user_info where phone=#{phone}
    </select>
    <select id="findUserByopenid" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,openid,login_type,phone from user_info where  openid= #{openid}
    </select>
    <select id="showApplicantBasicByOpenid"  parameterType="java.lang.String" resultMap="ApplicantBasicResultMap">
        select a.id applicant_id,u.id user_id
        from   user_info u
        left join applicant a on   a.user_id=u.id
        where u.login_type=2
        and u.flag =1
        and  u.openid=#{openid}
    </select>

    <select id="companyBasicByOpenid" parameterType="java.lang.String" resultMap="CompanyBasicResultMap">
        select m.id manager_id,m.company_id company_id,u.id user_id,m.flag
        from   user_info u
        left join (select user_id,id,company_id,flag from manager_info ) m on   m.user_id=u.id
        where u.login_type=1
        and u.flag=1
        and  u.openid=#{openid}
    </select>

    <update id="weiUserInfo" parameterType="com.nsd.recruitment.domain.UserInfo">
        update user_info set nick_name=#{nickName},avatar_url=#{avatarUrl}
        where id=#{id}
    </update>




</mapper>
